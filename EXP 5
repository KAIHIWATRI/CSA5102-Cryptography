#include <stdio.h>
#include <ctype.h>

int mod26(int x) {
    return (x % 26 + 26) % 26; // ensure positive modulo
}

char encryptChar(char p, int a, int b) {
    if(isalpha(p)) {
        int p_index = toupper(p) - 'A';
        int c_index = mod26(a * p_index + b);
        return 'A' + c_index;
    }
    return p;
}

char decryptChar(char c, int a, int b) {
    if(isalpha(c)) {
        int c_index = toupper(c) - 'A';
        // Find multiplicative inverse of a mod 26
        int a_inv;
        for(a_inv = 1; a_inv < 26; a_inv++) {
            if((a * a_inv) % 26 == 1) break;
        }
        int p_index = mod26(a_inv * (c_index - b));
        return 'A' + p_index;
    }
    return c;
}

int main() {
    char text[] = "HELLO";
    int a = 5, b = 8; // example keys
    int i;

    printf("Plaintext: %s\n", text);

    printf("Encrypted: ");
    for(i = 0; text[i]; i++)
        printf("%c", encryptChar(text[i], a, b));
    printf("\n");

    printf("Decrypted: ");
    for(i = 0; text[i]; i++)
        printf("%c", decryptChar(text[i], a, b));
    printf("\n");

    return 0;
}
